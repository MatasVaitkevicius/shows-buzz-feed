@using shows_buzz_feed.Services
@using shows_buzz_feed.Mappings.User
@using Microsoft.JSInterop
@using Blazored.Modal.Services
@inject UserService userService
@inject IJSRuntime JsRuntime
@inject IToastService toastService
@inject IModalService Modal

<div style="border-radius: 5px;background-color: #f2f2f2;padding: 20px;">
    <EditForm Model="@userModel" OnValidSubmit="@CreateUser">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="name">Name</label>
            <InputText id="name" required="required" class="form-control" @bind-Value="@userModel.Name" />
        </div>
        <div class="form-group">
            <button type="submit" value="Submit" class="btn btn-primary">Submit</button>
        </div>
    </EditForm>
    <button @onclick="BlazoredModal.CancelAsync" class="btn btn-secondary">Cancel</button>
</div>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    UserViewModel userModel = new UserViewModel();

    void BackgroundCancelDisabled()
    {
        var options = new ModalOptions { DisableBackgroundCancel = true };
    }

    private async Task CreateUser(EditContext film)
    {
        CreateUserCommand create = new CreateUserCommand()
        {
            Name = userModel.Name,
        };

        var result = await userService.InsertUserAsync(create);

        await BlazoredModal.CloseAsync(ModalResult.Ok<UserViewModel>(userModel));
    }
}
