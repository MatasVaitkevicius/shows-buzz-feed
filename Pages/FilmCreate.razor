@using shows_buzz_feed.Data
@using shows_buzz_feed.Services
@using shows_buzz_feed.Mappings.Film
@using Microsoft.JSInterop
@using Blazored.Modal.Services
@inject FilmService filmService
@inject IJSRuntime JsRuntime
@inject IToastService toastService
@inject IModalService Modal

<div style="border-radius: 5px;background-color: #f2f2f2;padding: 20px;">
    <EditForm Model="@filmModel" OnValidSubmit="@SubmitFilm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="orderDate">orderDate</label>
            <InputNumber TValue="double" id="budget" class="form-control" @bind-Value="@filmModel.Budget" />
        </div>

        <div class="form-group">
            <label for="price">price</label>
            <InputNumber TValue="double" id="length" class="form-control" @bind-Value="@filmModel.Length" />
        </div>

        <div class="form-group">
            <label for="status">Status</label>
            <InputText id="name" class="form-control" @bind-Value="@filmModel.Name" />
        </div>

        <div class="form-group">
            <label for="adress">Adress</label>
            <InputNumber TValue="int" id="releaseYear" class="form-control" @bind-Value="@filmModel.ReleaseYear" />
        </div>

        <div class="form-group">
            <button type="submit" value="Submit" class="btn btn-primary">Submit</button>
        </div>
    </EditForm>
    <button @onclick="BlazoredModal.CancelAsync" class="btn btn-secondary">Cancel</button>
</div>

@code {
    [CascadingParameter] BlazoredModalInstance BlazoredModal { get; set; }

    private FilmViewModel filmModel = new FilmViewModel();

    private async Task SubmitFilm()
    {
        CreateFilmCommand create = new CreateFilmCommand()
        {
            Length = filmModel.Length,
            Budget = filmModel.Budget,
            ReleaseYear = filmModel.ReleaseYear,
            Name = filmModel.Name,
        };

        var result = await filmService.InsertFilmAsync(create);

        if (result > 0)
        {
            toastService.ShowSuccess("Film has been added successfully");
            StateHasChanged();
        }
        else
        {
            toastService.ShowError("Film has not been added");
        }

        await BlazoredModal.CloseAsync(ModalResult.Ok<FilmViewModel>(filmModel));
    }
}
